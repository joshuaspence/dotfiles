# Do not bell on tab-completion.
set bell-style none

# Show automatically how parentheses (and other matching delimiters) match in
# the text. Whenever you type a self-inserting character that is a closing
# delimiter, the cursor moves momentarily to the location of the matching
# opening delimiter, provided that is on the screen.
set blink-matching-paren on

# The string that is inserted in vi mode when the insert-comment command is
# executed.
set comment-begin #

# Make tab autocomplete regardless of filename case.
set completion-ignore-case on

# If there are more than 200 possible completions for a word, ask to show them
# all.
set completion-query-items 200

# Allow UTF-8 input and output, instead of showing stuff like $'\0123\0456'.
set convert-meta off
set input-meta on
set output-meta on

# Don't echo ^C etc (new in bash 4.1). Note this only works for the command
# line itself, not if already running a command.
set echo-control-characters off

# Try to enable the application keypad when it is called.
#set enable-keypad on

# If set to on, tilde expansion is performed when readline attempts word
# completion.
set expand-tilde off

# When set to on, makes readline use a single line for display, scrolling the
# input horizontally on a single screen line when it becomes longer than the
# screen width rather than wrapping to a new line.
set horizontal-scroll-mode off

# Immediately add a trailing slash when autocompleting symlinks to directories.
set mark-symlinked-directories on

# Do not autocomplete hidden files unless the pattern explicitly begins with a
# dot.
set match-hidden-files off

# If set to on, readline uses an internal more-like pager to display a
# screenful of possible completions at a time.
set page-completions on

# If set to on, readline will display completions with matches sorted
# horizontally in alphabetical order, rather than down the screen.
set print-completions-horizontally on

# List all matches in case multiple possible completions are possible.
set show-all-if-ambiguous on

# This alters the default behavior of the completion functions in a fashion
# similar to show-all-if-ambiguous. If set to on, words which have more than
# one possible completion without any possible partial completion (the
# possible completions don't share a common prefix) cause the matches to be
# listed immediately instead of ringing the bell.
set show-all-if-unmodified on

# Be more intelligent when autocompleting by also looking at the text after
# the cursor.
set skip-completed-text on

# Show extra file information when completing, like `ls -F` does.
set visible-stats on

#===============================================================================
# Key mappings
#===============================================================================

$if mode=emacs
	"\e[3;3~": kill-word                # Alt+Delete

	"\e[1~": beginning-of-line          # Home
	"\e[2~": quoted-insert              # Insert
	"\e[3~": delete-char                # Delete
	"\e[4~": end-of-line                # End
	"\e[5~": beginning-of-history       # PgUp
	"\e[6~": end-of-history             # PgDown

	"\e[A": history-search-backward     # Up
	"\eOA": history-search-backward     # Up
	"\e[B": history-search-forward      # Down
	"\eOB": history-search-forward      # Down
	"\e[C": forward-char                # Right
	"\e[D": backward-char               # Left

	"\e[5C": forward-word               # Ctrl+Right
	"\e[1;5C": forward-word             # Ctrl+Right
	"\e\e[C": forward-word              # Ctrl+Right

	"\e[5D": backward-word              # Ctrl+Left
	"\e[1;5D": backward-word            # Ctrl+Left
	"\e\e[D": backward-word             # Ctrl+Left

	$if term=rxvt
		"\e[8~": end-of-line
		"\eOc": forward-word
		"\eOd": backward-word
	$endif

	# For non RH/Debian xterm, can't hurt for RH/Debian xterm.
	#"\eOH": beginning-of-line
	#"\eOF": end-of-line

	# For freebsd console.
	#"\e[H": beginning-of-line
	#"\e[F": end-of-line
$endif
