# Don't redefine this function.
command -v authme >/dev/null && return

# Check for the prerequisite functions.
(
    command -v awk >/dev/null &&
    command -v ssh >/dev/null
) || return 1

##
# Places a given public ssh key on a remote host for key-based authentication.
# The host can optionally contain the username (like "jdoe@ssh.example.com")
# and a non-standard port number (like "ssh.example.com:666").
#
# @param [String] Remote ssh host in for form of [<user>@]host[:<port>].
# @param [String] Path to the public key.
#
# @todo Test this!!!
#
authme() {
    if [ $# -ne 2 ] || [ -z "$1" ] || [ -z "$2" ]; then
        echo "Usage: authme <ssh_host> <public_key>" >&2
        return 1
    fi

    local host=$1
    local key=$2

    if [ ! -f $key ]; then
        echo "SSH key: $key does not exist."
        return 2
    fi

    if echo $host | egrep -q ':'; then
        local ssh_cmd="$(echo $host | awk -F':' '{print \"ssh -p \" $2 \" \" $1}')"
    else
        local ssh_cmd="ssh $host"
    fi

    $ssh_cmd '([ -d $HOME/.ssh ] || mkdir -m 0700 -p $HOME/.ssh; \
        cat - >> $HOME/.ssh/authorized_keys)' < $key
}
