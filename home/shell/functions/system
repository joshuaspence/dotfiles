#!/bin/sh

##
# Performs an egrep on the process list. Use any arguments that egrep accepts.
#
# @param [Array] egrep arguments.
#
# @link http://github.com/fnichol/bashrc/blob/master/bashrc
#
psg() {
    case $(uname -s) in
        Darwin|OpenBSD) ps wwwaux | egrep "($@|\bPID\b)" | egrep -v "grep" ;;
        SunOS|Linux)    ps -ef    | egrep "($@|\bPID\b)" | egrep -v "grep" ;;
        CYGWIN_*)       ps -efW   | egrep "($@|\bPID\b)" | egrep -v "grep" ;;
        *)              return 1 ;;
    esac
}

##
# I'm not really sure what this does...
#
quiet() {
    $* &> /dev/null &
}

##
# Calculates diskusage (with du) and reports back sorted and human readable.
#
# @param [Array] list of files or directories to report on (file args to du).
#
# @link http://github.com/lucapette/dotfiles/blob/master/bash/aliases
#
diskusage() {
    du -ks "$@" | \
        sort -nr | \
        awk '{ \
            if ($1 > 1048576) printf("%8.2fG", $1/1048576) ; \
            else if ($1 > 1024) printf("%8.2fM", $1/1024) ; \
            else printf("%8.2fK", $1) ; \
            sub($1, "") ; print \
        }'
}

# Show how much RAM application uses.
# $ ram safari
# # => safari uses 154.69 MBs of RAM.
ram() {
    local sum
    local items
    local app="$1"
    if [ -z "$app" ]; then
        echo "First argument - pattern to grep from processes" >&2
    else
        sum=0
        for i in `ps aux | grep -i "$app" | grep -v "grep" | awk '{print $6}'`; do
            sum=$(($i + $sum))
        done
        sum=$(echo "scale=2; $sum / 1024.0" | bc)
        if [[ $sum != "0" ]]; then
            echo "${fg[blue]}${app}${reset_color} uses ${fg[green]}${sum}${reset_color} MBs of RAM."
        else
            echo "There are no processes with pattern '${fg[blue]}${app}${reset_color}' are running."
        fi
    fi
}
