#!/bin/sh

# Check for color support.
source $HOME/.shell/environment/color

##
# Performs an egrep on the process list. Use any arguments that egrep accepts.
#
# @param [List] egrep arguments.
#
# @link http://github.com/fnichol/bashrc/blob/master/bashrc
#
psg() {
    case $(uname -s) in
        Darwin | OpenBSD) ps wwwaux | egrep "($@|\bPID\b)" | egrep -v 'grep' ;;
        SunOS | Linux)    ps -ef    | egrep "($@|\bPID\b)" | egrep -v 'grep' ;;
        CYGWIN_*)         ps -efW   | egrep "($@|\bPID\b)" | egrep -v 'grep' ;;
        *)                return 1 ;;
    esac
}

##
# I'm not really sure what this does...
#
# @link @todo
#
# @todo What does this do?
#
quiet() {
    $* &>/dev/null &
}

##
# Calculates disk usage (with `du`) and reports back sorted and human readable.
#
# @param [List] List of files or directories to report on (file arguments to
#               `du`).
#
# @link http://github.com/lucapette/dotfiles/blob/master/bash/aliases
#
diskusage() {
    du -ks "$@" | \
        sort -nr | \
        awk '{
            if ($1 > 1048576) printf("%8.2fG", $1/1048576);
            else if ($1 > 1024) printf("%8.2fM", $1/1024);
            else printf("%8.2fK", $1);
            sub($1, ""); print
        }'
}

##
# Show how much RAM an application uses.
#
# @param [String] The name of the process.
#
# @link @todo
#
ram() {
    local app="$1"

    if [ -z "$app" ]; then
        echo "usage: ram <pattern to grep from processes>" >&2
        return 1
    else
        local sum=0
        local i
        for i in $(ps aux | grep -i "$app" | grep -v 'grep' | awk '{print $6}'); do
            sum=$(($i + $sum))
        done
        sum=$(echo "scale=2; $sum / 1024.0" | bc)
        if [ $sum != 0 ]; then
            if [ -z $HAS_COLOR ]; then
                echo "$(colorize bold-blue)${app}$(colorize reset) uses $(colorize green)${sum} MB$(colorize reset) of RAM."
            else
                echo "${app} uses ${sum} MB of RAM."
            fi
        else
            if [ $SHELL_COLOR == 1]; then
            echo "There are no processes with pattern '${fg[blue]}${app}${reset_color}' are running."
        fi
    fi
}
