#===============================================================================
# Customising the PS1 prompt
#===============================================================================
#  \a         an ASCII bell character (07)
#  \d         the date in "Weekday Month Date" format (e.g., "Tue May 26")
#  \D{format} the format is passed to strftime(3) and the result is inserted
#	          into the prompt string an empty format results in a
#	          locale-specific time representation. The braces are required.
#  \e         an ASCII escape character (033)
#  \h         the hostname up to the first `.'
#  \H         the hostname
#  \j         the number of jobs currently managed by the shell
#  \l         the basename of the shell's terminal device name
#  \n         newline
#  \r         carriage return
#  \s         the name of the shell, the basename of $0 (the portion following
#             the final slash)
#  \t         the current time in 24-hour HH:MM:SS format
#  \T         the current time in 12-hour HH:MM:SS format
#  \@         the current time in 12-hour am/pm format
#  \A         the current time in 24-hour HH:MM format
#  \u         the username of the current user
#  \v         the version of bash (e.g., 2.00)
#  \V         the release of bash, version + patch level (e.g., 2.00.0)
#  \w         the current working directory, with $HOME abbreviated with a
#             tilde
#  \W         the basename of the current working directory, with $HOME
#             abbreviated with a tilde
#  \!         the history number of this command
#  \#         the command number of this command
#  \$         if the effective UID is 0, a #, otherwise a $
#  \nnn       the character corresponding to the octal number nnn
#  \\         a backslash
#  \[         begin a sequence of non-printing characters, which could be used
#             to embed a terminal control sequence into the prompt
#  \]         end a sequence of non-printing characters
#-------------------------------------------------------------------------------

# The all important colours!
source ${HOME}/.bash/colors

# Uncomment the below line to use the terminfo backspace character as the erase
# character. This is not enabled by default because terminfo is often broken.
#stty erase $(tput kbs)

# The contents of /etc/debian_chroot will be printed in the prompt. You can
# create this file in chroot environments to know where you are.
if [ -z ${debian_chroot} ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Set a fancy prompt (non-color, unless we know we "want" color).
case ${TERM} in
    xterm-color) color_prompt=yes;;
esac

# Uncomment for a colored prompt, if the terminal has the capability; turned off
# by default to not distract the user: the focus in a terminal window should be
# on the output of commands, not on the prompt.
force_color_prompt=yes

# Check for color support.
if [ -n ${force_color_prompt} ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1>&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ ${color_prompt} = yes ]; then
    PS1="${debian_chroot:+($debian_chroot)}\[${LIGHTGREEN}\]\u\[${NORM}\]@\[${YELLOW}\]\h\[${NORM}\]:\[${BLUE}\]\w\[${NORM}\]\$ "
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case ${TERM} in
    xterm*|rxvt*)
        PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1";;
esac

# Check for unsupported TERM variable.
if ! tput init &>/dev/null; then
    echo "Warning! TERM=$TERM unsupported, using TERM=xterm"
    export TERM=xterm
fi

# Screen window displays current command.
case ${TERM} in
    xterm*|rxvt*)
        PROMPT_COMMAND='echo -ne "\033]0;$(hostname | cut -d. -f1):${PWD/$HOME/~}\007"';;
    screen*)
        PROMPT_COMMAND='echo -ne "\033k$(hostname | cut -d. -f1):${PWD/$HOME/~}\033\\"';;
esac

# Enable programmable completion features (you don't need to enable this, if
# it's already enabled in /etc/bash.bashrc and /etc/profile sources
# /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    [ -e ${HOME}/.rcfiles.debug ] && echo "Sourcing /etc/bash_completion..." >&2
    source /etc/bash_completion
fi
