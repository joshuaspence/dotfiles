#!/bin/bash

#/
## Show the changes on the remote that would be pulled in.
##
## @param [optional, String] The name of the branch.
##
## @link https://github.com/wafflesnatcha/bin/blob/master/git-incoming
#\

#| Usage: git-incoming [<branch>]
#|
#| Show the changes on the remote that would be pulled in.

set -e

function usage() {
    cat "$0" |
    grep '^#|' |
    cut -c4-
}

if [[ $# > 0 && ( "$1" == '-h' || "$1" == '--help' ) ]]; then
    usage
    exit 0
fi

# Return the name of the current branch.
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

function tracking_branch() {
    branch_name=$1
    git for-each-ref --format='%(refname:short) %(upstream:short)' refs/heads |
    grep -e "${branch_name}\$" |
    awk '{print $2}'
}

# Are we tracking a remote branch?
TRACKING=$(tracking_branch ${CURRENT_BRANCH})

if [[ -z "${TRACKING//[[:space:]]/}" ]]; then
    echo "The current branch '${CURRENT_BRANCH}' does not track an upstream branch" >&2
    exit -1
fi

# What's the name of the remote?
REMOTE=$(git config branch.${CURRENT_BRANCH}.remote)

# Log options
OPTS="--pretty=oneline --abbrev-commit --decorate"

# URL of the remote we are tracking
REMOTE_URL=$(git config --get remote.${REMOTE}.url)

# Fetch the changes from the remote.
echo "Fetching changes from '"${REMOTE}"' (${REMOTE_URL})"
git fetch -q

# E.g. for 'master':
#  git log master..origin/master
CHANGES=$(env PAGER="" git log --color --exit-code $OPTS ${CURRENT_BRANCH}..${TRACKING})
if [ $? -eq 0 ]; then
    echo "No changes on ${REMOTE} that are not already available on this branch."
else
    echo "Changes on ${REMOTE}:"
    echo "${CHANGES}"
fi
