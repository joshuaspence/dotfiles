#!/bin/bash

#/
## Show the changes that need to be pushed to the remote the current branch is
## tracking.
##
## @param [optional, String] The name of the branch.
##
## @link https://github.com/wafflesnatcha/bin/blob/master/git-outgoing
#\

#| Usage: git-outgoing [<branch>]
#|
#| Show the changes that need to be pushed to the remote the current branch is tracking.

set -e

function usage() {
    cat "$0" |
    grep '^#|' |
    cut -c4-
}

if [[ $# > 0 && ( "$1" == '-h' || "$1" == '--help' ) ]]; then
    usage
    exit 0
fi

# Return the name of the current branch
CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`

function tracking_branch() {
    branch_name=$1
    git for-each-ref --format='%(refname:short) %(upstream:short)' refs/heads |
    grep -e "${branch_name}\$" |
    awk '{print $2}'
}

# Are we tracking a remote branch?
TRACKING=$(tracking_branch ${CURRENT_BRANCH})

if [[ -z "${TRACKING//[[:space:]]/}" ]]; then
    echo "The current branch '${CURRENT_BRANCH}' does not track an upstream branch"
    exit -1
fi

# Log options
OPTS='--pretty=oneline --abbrev-commit --decorate --color'

# What's the name of the remote?
REMOTE=$(git config "branch.${CURRENT_BRANCH}.remote")

# URL of the remote we are tracking
REMOTE_URL=$(git config --get "remote.${REMOTE}.url")

# E.g. for 'master':
#  git log master..origin/master
CHANGES=$(env PAGER='' git log --exit-code $OPTS ${TRACKING}..${CURRENT_BRANCH})
if [[ $? = 0 ]]; then
    echo "No changes need to be pushed to ${REMOTE}"
else
    echo "Local changes that need to be pushed to ${REMOTE}:"
    echo "${CHANGES}"
fi
