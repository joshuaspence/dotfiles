#!/bin/bash

#/
## Like `expr(1)`, but uses Google's calculator to evaluate the expression.
##
## Examples
## ========
## <code>
## gxpr '1 + 1'
## 2
## </code>
##
## <code>
## gxpr '2 ^ 16'
## 65536
## </code>
##
## <code>
## gxpr '(2 ^ 1) + (2 ^ 2) + (2 ^ 3) + (2 ^ 5)'
## 46
## </code>
##
## <code>
## gxpr '5*9+(sqrt 10)^3='
## 76.6227766
## </code>
##
## <code>
## gxpr '1GB in KB'
## 1048576 kilobytes
## </code>
##
## <code>
## gxpr '10 megabits in megabytes'
## 1.25 megabytes
## </code>
##
## <code>
## gxpr 2 miles in inches
## 126720 inches
## </code>
##
## @link https://github.com/pengwynn/dotfiles/blob/master/bin/gxpr
#\

#| Usage: gxpr <expression>
#|
#| Like `expr(1)`, but uses Google's calculator to evaluate <expression>.

set -e

function usage() {
    cat "$0" |
    grep '^#|' |
    cut -c4-
}

if [[ $# > 0 && ( "$1" == '-h' || "$1" == '--help' ) ]]; then
    usage
    exit 0
fi

if [[ $# == 0 ]]; then
    usage
    exit 1
fi

CURL='curl -s --header User-Agent:gxpr/1.0'
GOOGLE='http://www.google.com/ig/calculator'
WOLFRAM='http://www.wolframalpha.com/input/'
EXPR=$(echo "$@" | perl -MURI::Escape -ne 'chomp; print uri_escape($_)')

res=$(
    $CURL "${GOOGLE}?q=${EXPR}" |
    perl -ne '/rhs: "?([^\[\],":]+)/ and print $1' |
    perl -pe 's/[^\x00-\x7F]//g'
)

# If we don't have a result, try Wolfram Alpha.
if [[ $res ]]; then
    echo "${res}"
else
    echo -e "Google doesn't know: '$@'\n\nPerhaps try Wolfram Alpha: \033[4m${WOLFRAM}?i=${EXPR}\033[0m" >&2
    exit 2
fi
